blueprint:
  name: ZHA Philips Hue Dimmer Switch (RWL022) (Scene Peset)
  description: Control lights with a Philips Hue Dimmer Switch. Scene Peset integration is Required https://github.com/Hypfer/hass-scene_presets
  domain: automation
  input:
    dimmer_switch:
      name: Dimmer Switch
      description: The dimmer switch to use
      selector:
        device:
          integration: zha
          model: RWL022
          multiple: false
    light:
      name: Lights
      description: The lights to control with + / - and to turn off
      selector:
        entity:
          domain:
            - light
          multiple: false
    included_scenes:
      name: Hue Button Scenes
      description: Scenes to be included. First scene will be used only for main ON button.
      default: []
      selector:
        select:
          mode: dropdown
          options:
            - label: Rest
              value: e03267e7-9914-4f47-97fe-63c0bd317fe7
            - label: Relax
              value: e71b2ef3-1b15-4c4b-b036-4b3d6efe58f8
            - label: Read
              value: 035b6ecf-414e-4781-abc7-3911556097cb
            - label: Concentrate
              value: 0cbec4e8-d064-4457-986a-fe6078a63f39
            - label: Bright
              value: 6d10a807-7330-46d1-b093-c15520ba72c0
            - label: Dimmed
              value: 8f55e62a-e5f8-456a-9e8b-61f314bd4e99
            - label: Galaxy
              value: a6ba3a6e-1e3a-41fd-84f2-f7b021935deb
          multiple: true
    scene_helper:
      name: Scene helper
      description:
        Please select a Input Number Helper to be used to record the scene
        sequence.
      selector:
        entity:
          domain:
            - input_number
          multiple: false
    transition_time:
      name: Transition time
      description: Transition time when changes
      default: 1
      selector:
        number:
          min: 0.0
          max: 3.0
          step: 0.1
          unit_of_measurement: sec
          mode: slider
    hold_press_change:
      name: Hold press change
      description: Transition time between changes
      default: 17
      selector:
        number:
          min: 0.0
          max: 25.0
          step: 1.0
          unit_of_measurement: "%"
          mode: slider
    reset_after:
      name: Reset After
      description:
        Timeout can be set after which the order is reset to the first
        scene.
      default: 5
      selector:
        number:
          min: 1.0
          max: 120.0
          step: 1.0
          unit_of_measurement: s
          mode: slider
mode: restart
max_exceeded: silent
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input dimmer_switch
action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      included_scenes: !input included_scenes
      scene_helper: !input scene_helper
      reset_after: !input reset_after
      active_scene:
        "{{ iif(states(scene_helper) | int(0) >= included_scenes | count,
        1, states(scene_helper)) | int(0) }}"
      target_lights: !input light
      hold_press_change: !input hold_press_change
  - choose:
      - conditions:
          - "{{ command == 'on_press' }}"
        sequence:
          - choose:
              - conditions: "{{ states(target_lights) == 'off' }}"
                sequence:
                  - service: scene_presets.apply_preset
                    data:
                      preset_id: "{{ included_scenes[0] }}"
                      targets:
                        entity_id: !input light
                      shuffle: false
                      smart_shuffle: false
              - conditions: "{{ states(target_lights) == 'on' }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input light
                    data:
                      transition: !input transition_time
      - conditions:
          - "{{ command == 'on_double_press' }}"
        sequence:
          - service: scene_presets.apply_preset
            data:
              preset_id: "{{ included_scenes[0] }}"
              targets:
                entity_id: !input light
              shuffle: false
              smart_shuffle: false
      - conditions:
          - "{{ command == 'up_hold' or command == 'up_press'}}"
        sequence:
          - choose:
              - conditions:
                  "{{ (state_attr(target_lights, 'brightness') + ((hold_press_change/100)*254)
                  | round)  <= 255 }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id:
                        "{{ expand(target_lights) | selectattr('state', 'eq', 'on')
                        | map(attribute='entity_id') | list }}"
                    data:
                      brightness_step_pct: "{{ hold_press_change }}"
                      transition: !input transition_time
              - conditions:
                  "{{ (state_attr(target_lights, 'brightness') + ((hold_press_change/100)*254)
                  | round)  > 255 }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id:
                        "{{ expand(target_lights) | selectattr('state', 'eq', 'on')
                        | map(attribute='entity_id') | list }}"
                    data:
                      brightness_pct: 100
                      transition: !input transition_time
      - conditions: "{{ command == 'up_double_press' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id:
                "{{ expand(target_lights) | selectattr('state', 'eq', 'on')
                | map(attribute='entity_id') | list }}"
            data:
              brightness_pct: 100
              transition: !input transition_time
      - conditions:
          - "{{ command == 'down_hold' or command == 'down_press' }}"
        sequence:
          - choose:
              - conditions:
                  "{{ (state_attr(target_lights, 'brightness') - ((hold_press_change/100)*254)
                  | round)  >= hold_press_change }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id:
                        "{{ expand(target_lights) | selectattr('state', 'eq', 'on')
                        | map(attribute='entity_id') | list }}"
                    data:
                      brightness_step_pct: "{{ -hold_press_change }}"
                      transition: !input transition_time
                  - delay: !input transition_time
              - conditions:
                  "{{ (state_attr(target_lights, 'brightness') - ((hold_press_change/100)*254)
                  | round)  < hold_press_change or (state_attr(target_lights, 'brightness')
                  - ((hold_press_change/100)*254) | round)  >= 1}}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id:
                        "{{ expand(target_lights) | selectattr('state', 'eq', 'on')
                        | map(attribute='entity_id') | list }}"
                    data:
                      brightness_pct: 1
                      transition: !input transition_time
                  - delay: !input transition_time
      - conditions: "{{ command == 'down_double_press' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id:
                "{{ expand(target_lights) | selectattr('state', 'eq', 'on')
                | map(attribute='entity_id') | list }}"
            data:
              brightness_pct: 1
              transition: !input transition_time
      - conditions: "{{ command == 'off_press' }}"
        sequence:
          - service: scene_presets.apply_preset
            data:
              preset_id: "{{ included_scenes[active_scene] }}"
              targets:
                entity_id: !input light
              shuffle: false
              smart_shuffle: false
          - service: input_number.set_value
            target:
              entity_id: !input scene_helper
            data:
              value: "{{ active_scene + 1}}"
  - delay:
      hours: 0
      minutes: 0
      seconds: !input reset_after
      milliseconds: 0
  - service: input_number.set_value
    target:
      entity_id: !input scene_helper
    data:
      value: 1
